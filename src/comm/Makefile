# A sample Makefile for building Google Test and using it in user
# tests.  Please tweak it to suit your environment and project.  You
# may want to move it to your project's root directory.
#
# SYNOPSIS:
#
#   make [all]  - makes everything.
#   make TARGET - makes the given target.
#   make clean  - removes all files generated by make.

# Please tweak the following variable definitions as needed by your
# project, except GTEST_HEADERS, which you can use in your own targets
# but shouldn't modify.

# Points to the root of Google Test, relative to where this file is.
# Remember to tweak this if you move this file.
GTEST_DIR = ../gtest

# Where to find user code.
USER_DIR = ../samples

YANETLIB_DIR = ..

# Flags passed to the preprocessor.
INCL = -I$(GTEST_DIR)/include -I$(YANETLIB_DIR)

# Flags passed to the C++ compiler.
CXXFLAGS += -g -Wall -Wextra -Wno-unused-parameter

CXXSRC = $(wildcard *.cc)
CSRC   = $(wildcard *.c)
SRC    = $(CXXSRC) $(CSRC)
CXXOBJ = $(CXXSRC:%.cc=%.o)
COBJ   = $(CSRC:%.c=%.o)
OBJ    = $(CXXOBJ) $(COBJ)
OBJ    := $(filter-out %unittest.o, $(OBJ))

LIB   = $(GTEST_DIR)/gtest_main.a

# All tests produced by this Makefile.  Remember to add new tests you
# created to the list.
TARGET = libcomm.a

UNITTEST = strutil_unittest datetime_unittest md5_unittest common_unittest tinyxml2_unittest \
		   simpleconf_unittest rotatelog_unittest

all : $(TARGET)

libcomm.a : $(OBJ)
	ar -rv $@ $^

clean :
	rm -f $(TARGET) $(UNITTEST)  *.o

.cc.o: $(CXXFLAGS)
	g++ $(CXXFLAGS) $(INCL) -o $@ -c $<

.c.o: $(CFLAGS)
	g++ $(CXXFLAGS) $(INCL) -o $@ -c $<

unittest: $(UNITTEST)

strutil_unittest: strutil_unittest.o strutil.o 
	g++ $(CXXFLAGS) $(INCL) -o $@ $^ -lpthread $(LIB)
	./strutil_unittest
fileutil_unittest: fileutil_unittest.o fileutil.o
	g++ $(CXXFLAGS) $(INCL) -o $@ $^ -lpthread $(LIB)
	./fileutil_unittest
datetime_unittest: datetime_unittest.o datetime.o 
	g++ $(CXXFLAGS) $(INCL) -o $@ $^ -lpthread $(LIB)
	./datetime_unittest
md5_unittest: md5_unittest.o md5.o 
	g++ $(CXXFLAGS) $(INCL) -o $@ $^ -lpthread $(LIB)
	./md5_unittest
common_unittest: common_unittest.o common.o 
	g++ $(CXXFLAGS) $(INCL) -o $@ $^ -lpthread $(LIB)
	./common_unittest
simpleconf_unittest: simpleconf_unittest.o strutil.o config_parser.o 
	g++ $(CXXFLAGS) $(INCL) -o $@ $^ -lpthread $(LIB)
	./simpleconf_unittest
rotatelog_unittest: rotatelog_unittest.o rotate_log.o datetime.o
	g++ $(CXXFLAGS) $(INCL) -o $@ $^ -lpthread $(LIB)
	./rotatelog_unittest
#tinyxml2 has its own unittest, now using gtest..
tinyxml2_unittest: tinyxml2_unittest.o tinyxml2.o
	g++ $(CXXFLAGS) $(INCL) -o $@ $^ 


